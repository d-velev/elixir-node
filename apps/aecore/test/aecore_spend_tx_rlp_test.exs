defmodule AecoreSpendTxRLPTest do
  use ExUnit.Case

  alias Aecore.Account.Account
  alias Aecore.Tx.DataTx
  @tag :spend_tx_rlp

  test "epoch rlp matching elixir" do
    assert epoch_rlp() == create_elixir_rlp()
  end

  def epoch_rlp do
    <<248, 75, 12, 1, 161, 1, 131, 42, 186, 255, 215, 60, 20, 183, 171, 91, 106, 96, 193, 82, 240,
      40, 143, 147, 146, 114, 161, 219, 122, 210, 80, 51, 254, 171, 198, 224, 217, 235, 161, 1,
      60, 58, 118, 243, 200, 70, 201, 62, 52, 71, 117, 107, 179, 13, 23, 66, 12, 233, 33, 165, 48,
      25, 38, 201, 160, 63, 208, 76, 240, 78, 249, 57, 10, 10, 0, 10, 128>>
  end

  def create_elixir_rlp do
    sender_pub =
      <<131, 42, 186, 255, 215, 60, 20, 183, 171, 91, 106, 96, 193, 82, 240, 40, 143, 147, 146,
        114, 161, 219, 122, 210, 80, 51, 254, 171, 198, 224, 217, 235>>

    sender_priv =
      <<161, 179, 52, 31, 91, 44, 159, 233, 54, 59, 21, 79, 76, 179, 57, 214, 68, 127, 121, 202,
        7, 248, 243, 139, 150, 163, 22, 112, 229, 146, 15, 198, 131, 42, 186, 255, 215, 60, 20,
        183, 171, 91, 106, 96, 193, 82, 240, 40, 143, 147, 146, 114, 161, 219, 122, 210, 80, 51,
        254, 171, 198, 224, 217, 235>>

    receiver =
      <<60, 58, 118, 243, 200, 70, 201, 62, 52, 71, 117, 107, 179, 13, 23, 66, 12, 233, 33, 165,
        48, 25, 38, 201, 160, 63, 208, 76, 240, 78, 249, 57>>

    {:ok, tx} = Account.spend(sender_pub, sender_priv, receiver, 10, 10, 10, <<>>)

    DataTx.rlp_encode(tx.data)
  end
end
